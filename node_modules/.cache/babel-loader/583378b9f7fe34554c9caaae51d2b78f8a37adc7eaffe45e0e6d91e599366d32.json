{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoyang/VSCodeProjects/CS5500/calc-sheet-distribution-assignment1-2023/src/Components/ServerSelector.tsx\"; // define the props for ServerSelector\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServerSelector(_ref) {\n  let {\n    serverSelector,\n    serverSelected\n  } = _ref;\n  const isProduction = process.env.NODE_ENV === 'production';\n  if (isProduction) {\n    return null;\n  }\n\n  //\n  // the callback that will take the name of the button and called serverSelector\n  function onButtonClick(event) {\n    const buttonName = event.currentTarget.innerText;\n    serverSelector(buttonName);\n  } // onButtonClick\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onButtonClick,\n      children: \"localhost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onButtonClick,\n      children: \"renderhost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), \"current server: \", serverSelected]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_c = ServerSelector;\nexport default ServerSelector;\nvar _c;\n$RefreshReg$(_c, \"ServerSelector\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","ServerSelector","_ref","serverSelector","serverSelected","isProduction","process","env","NODE_ENV","onButtonClick","event","buttonName","currentTarget","innerText","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/xiaoyang/VSCodeProjects/CS5500/calc-sheet-distribution-assignment1-2023/src/Components/ServerSelector.tsx"],"sourcesContent":["\n\n// define the props for ServerSelector\n\ninterface ServerSelectorProps {\n    serverSelector: (buttonName: string) => void;\n    serverSelected: string;\n}\n\n\nfunction ServerSelector({ serverSelector, serverSelected }: ServerSelectorProps) {\n\n\n    const isProduction = process.env.NODE_ENV === 'production';\n\n    if (isProduction) {\n        return null;\n    }\n\n\n    //\n    // the callback that will take the name of the button and called serverSelector\n    function onButtonClick(event: React.MouseEvent<HTMLButtonElement>) {\n        const buttonName = event.currentTarget.innerText;\n        serverSelector(buttonName);\n    } // onButtonClick\n\n\n    return (\n        <div>\n            <button onClick={onButtonClick}>localhost</button>\n            <button onClick={onButtonClick}>renderhost</button>\n            current server: {serverSelected}\n        </div>\n    )\n}\n\nexport default ServerSelector;"],"mappings":"uIAEA;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAQA,SAASC,cAAcA,CAAAC,IAAA,EAA0D;EAAA,IAAzD;IAAEC,cAAc;IAAEC;EAAoC,CAAC,GAAAF,IAAA;EAG3E,MAAMG,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;EAE1D,IAAIH,YAAY,EAAE;IACd,OAAO,IAAI;EACf;;EAGA;EACA;EACA,SAASI,aAAaA,CAACC,KAA0C,EAAE;IAC/D,MAAMC,UAAU,GAAGD,KAAK,CAACE,aAAa,CAACC,SAAS;IAChDV,cAAc,CAACQ,UAAU,CAAC;EAC9B,CAAC,CAAC;;EAGF,oBACIX,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAQe,OAAO,EAAEN,aAAc;MAAAK,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClDnB,OAAA;MAAQe,OAAO,EAAEN,aAAc;MAAAK,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,oBACnC,EAACf,cAAc;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEd;AAACC,EAAA,GAzBQnB,cAAc;AA2BvB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}