{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoyang/VSCodeProjects/CS5500/calc-sheet-distribution-assignment1-2023/src/Components/SheetComponent.tsx\";\nimport React from \"react\";\nimport Cell from \"../Engine/Cell\";\nimport \"./SheetComponent.css\";\n\n// a component that will render a two dimensional array of cells\n// the cells will be rendered in a table\n// the cells will be rendered in rows\n// a click handler will be passed in\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// interface SheetComponentProps\n\nfunction SheetComponent(_ref) {\n  let {\n    cellsValues,\n    onClick,\n    currentCell,\n    currentlyEditing\n  } = _ref;\n  /**\n   * \n   * @param cell \n   * @returns the class name for the cell\n   * \n   * if the cell is the current cell and the sheet is in edit mode\n   * then the cell will be rendered with the class name \"cell-editing\"\n   * \n   * if the cell is the current cell and the sheet is not in edit mode\n   * then the cell will be rendered with the class name \"cell-selected\"\n   * \n   * otherwise the cell will be rendered with the class name \"cell\"\n   */\n  function getCellClass(cell) {\n    if (cell === currentCell && currentlyEditing) {\n      return \"cell-editing\";\n    }\n    if (cell === currentCell) {\n      return \"cell-selected\";\n    }\n    return \"cell\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), cellsValues[0].map((col, colIndex) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: Cell.columnNumberToName(colIndex)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), cellsValues.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", Cell.rowNumberToName(rowIndex)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClick,\n            value: cell,\n            \"cell-label\": Cell.columnRowToCell(colIndex, rowIndex),\n            \"data-testid\": Cell.columnRowToCell(colIndex, rowIndex),\n            className: getCellClass(Cell.columnRowToCell(colIndex, rowIndex)),\n            children: cell\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n} // SheetComponent\n_c = SheetComponent;\nexport default SheetComponent;\nvar _c;\n$RefreshReg$(_c, \"SheetComponent\");","map":{"version":3,"names":["React","Cell","jsxDEV","_jsxDEV","SheetComponent","_ref","cellsValues","onClick","currentCell","currentlyEditing","getCellClass","cell","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","col","colIndex","columnNumberToName","row","rowIndex","rowNumberToName","value","columnRowToCell","_c","$RefreshReg$"],"sources":["/Users/xiaoyang/VSCodeProjects/CS5500/calc-sheet-distribution-assignment1-2023/src/Components/SheetComponent.tsx"],"sourcesContent":["import React from \"react\";\n\nimport Cell from \"../Engine/Cell\";\n\nimport \"./SheetComponent.css\";\n\n// a component that will render a two dimensional array of cells\n// the cells will be rendered in a table\n// the cells will be rendered in rows\n// a click handler will be passed in\n\ninterface SheetComponentProps {\n  cellsValues: Array<Array<string>>;\n  onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  currentCell: string;\n  currentlyEditing: boolean;\n} // interface SheetComponentProps\n\n\n\n\nfunction SheetComponent({ cellsValues, onClick, currentCell, currentlyEditing }: SheetComponentProps) {\n\n  /**\n   * \n   * @param cell \n   * @returns the class name for the cell\n   * \n   * if the cell is the current cell and the sheet is in edit mode\n   * then the cell will be rendered with the class name \"cell-editing\"\n   * \n   * if the cell is the current cell and the sheet is not in edit mode\n   * then the cell will be rendered with the class name \"cell-selected\"\n   * \n   * otherwise the cell will be rendered with the class name \"cell\"\n   */\n  function getCellClass(cell: string) {\n    if (cell === currentCell && currentlyEditing) {\n      return \"cell-editing\";\n    }\n    if (cell === currentCell) {\n      return \"cell-selected\";\n    }\n    return \"cell\";\n  }\n\n  return (\n    <table className=\"table\">\n      <tbody>\n        {/*add a row with column cellsValues */}\n        <tr>\n          <th></th>\n          {cellsValues[0].map((col, colIndex) => (\n            <th key={colIndex}>\n              {Cell.columnNumberToName(colIndex)}\n            </th>\n          ))}\n        </tr>\n        {cellsValues.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            <td> {Cell.rowNumberToName(rowIndex)}</td>\n            {row.map((cell, colIndex) => (\n              <td key={colIndex}>\n                <button\n                  onClick={onClick}\n                  value={cell}\n                  cell-label={Cell.columnRowToCell(colIndex, rowIndex)}\n                  data-testid={Cell.columnRowToCell(colIndex, rowIndex)}\n                  className={(getCellClass(Cell.columnRowToCell(colIndex, rowIndex)))}\n                >\n                  {cell}\n                </button>\n\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n} // SheetComponent\n\n\n\n\nexport default SheetComponent;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,IAAI,MAAM,gBAAgB;AAEjC,OAAO,sBAAsB;;AAE7B;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOE;;AAKF,SAASC,cAAcA,CAAAC,IAAA,EAA+E;EAAA,IAA9E;IAAEC,WAAW;IAAEC,OAAO;IAAEC,WAAW;IAAEC;EAAsC,CAAC,GAAAJ,IAAA;EAElG;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASK,YAAYA,CAACC,IAAY,EAAE;IAClC,IAAIA,IAAI,KAAKH,WAAW,IAAIC,gBAAgB,EAAE;MAC5C,OAAO,cAAc;IACvB;IACA,IAAIE,IAAI,KAAKH,WAAW,EAAE;MACxB,OAAO,eAAe;IACxB;IACA,OAAO,MAAM;EACf;EAEA,oBACEL,OAAA;IAAOS,SAAS,EAAC,OAAO;IAAAC,QAAA,eACtBV,OAAA;MAAAU,QAAA,gBAEEV,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRX,WAAW,CAAC,CAAC,CAAC,CAACY,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBAChCjB,OAAA;UAAAU,QAAA,EACGZ,IAAI,CAACoB,kBAAkB,CAACD,QAAQ;QAAC,GAD3BA,QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EACJX,WAAW,CAACY,GAAG,CAAC,CAACI,GAAG,EAAEC,QAAQ,kBAC7BpB,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,GAAI,GAAC,EAACZ,IAAI,CAACuB,eAAe,CAACD,QAAQ,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACzCK,GAAG,CAACJ,GAAG,CAAC,CAACP,IAAI,EAAES,QAAQ,kBACtBjB,OAAA;UAAAU,QAAA,eACEV,OAAA;YACEI,OAAO,EAAEA,OAAQ;YACjBkB,KAAK,EAAEd,IAAK;YACZ,cAAYV,IAAI,CAACyB,eAAe,CAACN,QAAQ,EAAEG,QAAQ,CAAE;YACrD,eAAatB,IAAI,CAACyB,eAAe,CAACN,QAAQ,EAAEG,QAAQ,CAAE;YACtDX,SAAS,EAAGF,YAAY,CAACT,IAAI,CAACyB,eAAe,CAACN,QAAQ,EAAEG,QAAQ,CAAC,CAAG;YAAAV,QAAA,EAEnEF;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC,GATFG,QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWb,CACL,CAAC;MAAA,GAfKM,QAAQ;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBb,CACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC,CAAC;AAAAU,EAAA,GA3DOvB,cAAc;AAgEvB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}